# cloudbuild.yaml
#
# This file configures the continuous integration and deployment pipeline for the SkinCake project
# using Google Cloud Build. When changes are pushed to the main branch of the GitHub repository,
# this pipeline will automatically build a Docker image, push it to Google Container Registry,
# and deploy it to Google Cloud Run.
#
steps:
  # Step 1: Build the Docker image
  # This step uses the standard Docker builder to build the image based on the Dockerfile
  # in the root of the repository. It tags the image with both the commit SHA and 'latest'.
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/skincake-app:latest',
      '-t', 'gcr.io/$PROJECT_ID/skincake-app:$COMMIT_SHA',
      '.'
    ]
    id: 'Build Docker Image'

  # Step 2: Push the Docker image to Google Container Registry (GCR)
  # After the image is built, this step pushes it to GCR, making it available for deployment.
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/skincake-app:latest']
    id: 'Push Latest to GCR'

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/skincake-app:$COMMIT_SHA']
    id: 'Push Commit SHA to GCR'
    waitFor: ['Push Latest to GCR'] # Ensures the 'latest' tag is pushed first

  # Step 3: Deploy the new image to Google Cloud Run
  # This is the final step, where the newly pushed image is deployed to the 'skincake-app'
  # Cloud Run service. It configures the service according to our plan.
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'run', 'deploy', 'skincake-app',
      '--image', 'gcr.io/$PROJECT_ID/skincake-app:$COMMIT_SHA',
      '--region', 'asia-east1',
      '--platform', 'managed',
      '--allow-unauthenticated', # We will secure this with Cloudflare later
      '--memory', '2Gi',
      '--cpu', '1',
      '--min-instances', '1',
      '--max-instances', '50', # Adjusted for initial launch
      '--set-cloudsql-instances', 'skincake-gcp-project-2025:asia-east1:skincake-db',
      '--set-env-vars', 'NODE_ENV=production',
      # Mount the database connection string from Secret Manager as an environment variable
      '--set-secrets=DATABASE_URL=db-connection-string:latest'
    ]
    id: 'Deploy to Cloud Run'
    waitFor: ['Push Commit SHA to GCR']

# Specifies the images that will be pushed to GCR upon successful completion of all steps.
images:
  - 'gcr.io/$PROJECT_ID/skincake-app:latest'
  - 'gcr.io/$PROJECT_ID/skincake-app:$COMMIT_SHA'

# General options for the build
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8' # Use a more powerful machine type for faster builds

# Build timeout
timeout: '1200s' # 20 minutes 